---

- hosts: localhost

# API Call using Ansible URI Module against api.covid19tracker.ca/summary #
  tasks:
    - name: GET Canada COVID 19 Summary
      uri:
        url: https://api.covid19tracker.ca/summary
        method: GET
        headers: 
          Connection: keep-alive
          Accept: application/json 
        return_content: yes
        validate_certs: no
        follow_redirects: yes
      register: summary

# Nested Loop over JSON response and capture summary info #
    - name: "Get Summary Info"
      debug:
        var: item
      with_nested: 
        - "{{ summary.json | json_query('data[*].latest_date')  | flatten(levels=1) }}"
        - "{{ summary.json | json_query('data[*].change_cases')  | flatten(levels=1) }}"
        - "{{ summary.json | json_query('data[*].change_fatalities')  | flatten(levels=1) }}"
        - "{{ summary.json | json_query('data[*].change_tests')  | flatten(levels=1) }}"
        - "{{ summary.json | json_query('data[*].change_hospitalizations')  | flatten(levels=1) }}"
        - "{{ summary.json | json_query('data[*].change_criticals')  | flatten(levels=1) }}"
        - "{{ summary.json | json_query('data[*].change_recoveries')  | flatten(levels=1) }}"
        - "{{ summary.json | json_query('data[*].total_cases')  | flatten(levels=1) }}"
        - "{{ summary.json | json_query('data[*].total_fatalities')  | flatten(levels=1) }}"
        - "{{ summary.json | json_query('data[*].total_tests')  | flatten(levels=1) }}"
        - "{{ summary.json | json_query('data[*].total_criticals')  | flatten(levels=1) }}"      
        - "{{ summary.json | json_query('data[*].total_recoveries')  | flatten(levels=1) }}"              
      register: summary_loop_output

# Create CSV file with results #
    - name: Create CSV
      copy: content="{{ summary_loop_output | json_query('results[*].item') }}" dest=../reports/csv/summary.csv

# Format CSV #
    - name: Format CSV File New Lines
      replace:
        path: ../reports/csv/summary.csv
        regexp: '],'
        replace: ']\n'

# Format CSV #
    - name: Format CSV File Clean Up
      replace:
        path: ../reports/csv/summary.csv
        regexp: '\[|\]|"'
        replace: ''

# Add Header Row to CSV #
    - name: Header Row
      lineinfile:
        path: ../reports/csv/summary.csv
        insertbefore: BOF
        line: Latest Date, Change Cases, Change Fatalities, Change Tests, Change Hospitalizations, Change Criticals, Change Recoveries, Total Cases, Total Fatalities, Total Tests, Total Criticals, Total Recoveries

# Create Markdown file with results # 
    - name: Create Markdown
      copy: content="{{ summary_loop_output | json_query('results[*].item') }}" dest=../reports/markdown/summary.md

# Format Markdown #
    - name: Format Markdown File New Lines
      replace:
        path: ../reports/markdown/summary.md
        regexp: '],'
        replace: ']\n'

# Format Markdown #
    - name: Format Markdown File Clean Up
      replace:
        path: ../reports/markdown/summary.md
        regexp: '\[|\]|"'
        replace: ''      

# Format Markdown #
    - name: Format Markdown File Commas to Pipes
      replace:
        path: ../reports/markdown/summary.md
        regexp: ','
        replace: ' | '

# Add Header Rows to Markdown #
    - name: Header Row
      lineinfile:
        path: ../reports/markdown/summary.md
        insertbefore: BOF
        line: "{{ item.property }}"
      with_items:
        - { property: '| ----------- | ------------ | ----------------- | ------------ | ----------------------- | ---------------- | ----------------- | ----------- | ---------------- | ----------- | --------------- | ---------------- |' }
        - { property: '| Latest Date | Change Cases | Change Fatalities | Change Tests | Change Hospitalizations | Change Criticals | Change Recoveries | Total Cases | Total Fatalities | Total Tests | Total Criticals | Total Recoveries |' }

# Create Mind Map # 
    - name: create Summary Mind Map 
      shell: "markmap --no-open ../reports/markdown/summary.md -o ../reports/mindmap/summary.html"
      register: markmap